import { addDate, compareAsc, stringWidth } from "./deps.ts";
import { sendTweet } from "./tweet.ts";
import {
  zennApi,
  zennLink,
  ZennTopic,
} from "https://github.com/kawarimidoll/deno-zenn-api/raw/main/mod.ts";

const { articles } = await zennApi("kawarimidoll");
if (!articles || !articles[0]) {
  throw new Error("No articles found");
}

const article = articles[0];

const { title, emoji, articleType, topics, readingTime, publishedAt } = article;
const isLatest =
  compareAsc(addDate(new Date(publishedAt), { days: 1 }), new Date()) > 0;
if (!isLatest) {
  console.log("The article is already promoted.");
  Deno.exit(0);
}

const link = zennLink(article);

const header = `#Zenn で『${emoji} ${title}』という${articleType}記事を書きました`;
const footer = "(This tweet is auto-generated by #Deno 🦕)";
const comment = `${readingTime}分くらいで読めるのでスキマ時間のお供にどうぞ`;

const genTopicsText = (topics: ZennTopic[]) => {
  if (!topics[0]) {
    return "";
  }

  const suffix = "についていろいろ書いています";

  // url string length is always 22, lines are 6
  const length = stringWidth(header + comment + footer + suffix) + 22 + 6;
  const sortedTopics = topics.sort((a, b) => b.taggingsCount - a.taggingsCount);
  let topicsText = "";

  for (const topic of sortedTopics) {
    const text = topic.displayName + "とか";

    if (length + stringWidth(topicsText + text) >= 280) {
      break;
    }
    topicsText += text;
  }

  return topicsText + suffix;
};

const message = [
  header,
  comment,
  genTopicsText(topics),
  link,
  footer,
].join("\n");

console.log(message);
const result = await sendTweet(message);
console.log(result);
if (result.errors) {
  Deno.exit(1);
}
